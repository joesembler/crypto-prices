{"ast":null,"code":"var _jsxFileName = \"/Users/sarahnosal/Development/code/phase-2/Project/crypto-prices/src/components/Sort.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Sort(props) {\n  _s();\n\n  const [sortType, setSortType] = useState('market_cap');\n  const [ascending, setAscending] = useState(true);\n  console.log(props);\n  useEffect(() => {\n    const sortArray = type => {\n      const types = {\n        name: 'name',\n        current_price: 'current_price',\n        price_change_24h: 'price_change_24h',\n        market_cap: 'market_cap'\n      };\n      const sortProperty = types[type];\n\n      if (props.coins.length > 0) {\n        const sorted = [...props.coins].sort((a, b) => {\n          if (a[sortProperty] > b[sortProperty]) {\n            if (ascending) {\n              return -1;\n            } else if (!ascending) {\n              return 1;\n            }\n          } else if (a[sortProperty] < b[sortProperty]) {\n            if (ascending) {\n              return 1;\n            } else if (!ascending) {\n              return -1;\n            } else if (a[sortProperty] === b[sortProperty]) {\n              return 0;\n            }\n          } // b[sortProperty] - a[sortProperty])\n\n        });\n        props.setDisplayCoins(sorted);\n      }\n    };\n\n    sortArray(sortType);\n  }, [sortType, ascending]); // if(coins.length > 0){\n  //     const sortedCoins = coins.sort((a, b) => {\n  //         if(a.current_price < b.current_price){\n  //             return -1;\n  //         }   \n  //         if(a.current_price > b.current_price){\n  //             return 1;\n  //         } \n  //         else{\n  //             return 0;\n  //         }\n  //    })\n  //    .map((coin) => coin);\n  //    console.log(sortedCoins)\n  // }\n  // console.log(coins);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Sort\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"Sort By: \",\n      children: \"Sort By: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setSortType(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"market_cap\",\n        children: \"Market Cap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"name\",\n        children: \"Alphabetical\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"current_price\",\n        children: \"Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"price_change_24h\",\n        children: \"Percent Change\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setAscending(!ascending);\n      },\n      children: ascending ? \"Descending\" : \"Ascending\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Sort, \"G76XmV4Z4m6JlyJ+QB1u8jnYtY4=\");\n\n_c = Sort;\nexport default Sort;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sort\");","map":{"version":3,"sources":["/Users/sarahnosal/Development/code/phase-2/Project/crypto-prices/src/components/Sort.js"],"names":["React","useState","useEffect","Sort","props","sortType","setSortType","ascending","setAscending","console","log","sortArray","type","types","name","current_price","price_change_24h","market_cap","sortProperty","coins","length","sorted","sort","a","b","setDisplayCoins","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\n\n\n\nfunction Sort(props){\n    const [sortType, setSortType] = useState('market_cap');\n    const [ascending, setAscending] = useState(true);\n    console.log(props)\n    \n    useEffect(() => {\n        const sortArray = type => {\n          const types = {\n            name: 'name',\n            current_price: 'current_price',\n            price_change_24h: 'price_change_24h',\n            market_cap: 'market_cap'\n          };\n          const sortProperty = types[type];\n          if(props.coins.length > 0){\n            const sorted = [...props.coins].sort((a, b) => {\n              if(a[sortProperty] > b[sortProperty]){\n                if(ascending){\n                  return -1;\n                }\n                else if(!ascending){\n                  return 1;\n                }\n              }\n              else if(a[sortProperty] < b[sortProperty]){\n                if(ascending){\n                  return 1;\n                }\n                else if(!ascending){\n                  return -1;\n                }\n              else if(a[sortProperty] === b[sortProperty]){\n                return 0;\n              }\n              }\n              \n              // b[sortProperty] - a[sortProperty])\n            })\n            \n            props.setDisplayCoins(sorted);\n          }\n          \n          }\n          \n        sortArray(sortType);\n      }, [sortType, ascending]);\n\n\n    // if(coins.length > 0){\n    //     const sortedCoins = coins.sort((a, b) => {\n    //         if(a.current_price < b.current_price){\n    //             return -1;\n    //         }   \n    //         if(a.current_price > b.current_price){\n    //             return 1;\n    //         } \n    //         else{\n    //             return 0;\n    //         }\n    //    })\n    //    .map((coin) => coin);\n    //    console.log(sortedCoins)\n    // }\n    \n    \n    // console.log(coins);\n\n\n  \n\n\n\n    return(\n        <div className=\"Sort\">\n            <label for=\"Sort By: \">Sort By: </label>\n            \n            <select onChange={(e) => setSortType(e.target.value)}>\n              <option value=\"market_cap\">Market Cap</option>\n                <option value=\"name\">Alphabetical</option>\n                <option value=\"current_price\">Price</option>\n                <option value=\"price_change_24h\">Percent Change</option>\n                \n            </select>\n            <button onClick={() => {setAscending(!ascending)}}>{ascending ? \"Descending\" : \"Ascending\"}</button>\n        </div>\n        \n    )\n}\n\nexport default Sort;"]},"metadata":{},"sourceType":"module"}