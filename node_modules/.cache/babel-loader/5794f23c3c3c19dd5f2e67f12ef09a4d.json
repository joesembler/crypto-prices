{"ast":null,"code":"var _jsxFileName = \"/Users/joeysembler/Development/code/crypto-prices/src/components/CryptoCoin.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CryptoCoin(_ref) {\n  let {\n    coin\n  } = _ref;\n\n  function currencyFormat(num) {\n    if (num < .1) {\n      return '$' + num;\n    } else {\n      return '$' + num;\n    }\n  }\n\n  function percentageFormat(num) {\n    if (num > 0) {\n      return '+' + num + '%';\n    } else {\n      return num + '%';\n    }\n  }\n\n  function marketCapFormat(num) {\n    if (num > 1000000000000) {\n      const newNum = num / 1000000000000;\n      return '$' + newNum.toFixed(1) + \"  trillion\";\n    } else if (num > 1000000000) {\n      const newNum = num / 1000000000;\n      return '$' + newNum.toFixed(1) + \"  billion\";\n    } else if (num > 1000000) {\n      const newNum = num / 1000000;\n      return '$' + newNum.toFixed(1) + \"  million\";\n    }\n  }\n\n  function formatLastUpdated(date) {\n    let lastUpdatedMill = Date.parse(date);\n    let now = new Date();\n    now = Date.parse(now);\n    lastUpdatedMill = now - lastUpdatedMill;\n    const lastUpdatedMin = lastUpdatedMill / 1000 / 60;\n    return Math.round(lastUpdatedMin);\n  }\n\n  console.log(coin.current_price.toFixed(1));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CryptoCoin\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      height: \"150\",\n      width: \"500\",\n      children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n        width: \"1080\",\n        height: \"1080\",\n        fill: \"#55ceff\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"image\", {\n        href: coin.image,\n        width: \"100\",\n        height: \"100\",\n        x: \"28\",\n        y: \"15\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        fill: \"black\",\n        fontSize: \"30\",\n        fontFamily: \"Marker Felt\",\n        x: \"4\",\n        y: \"37\",\n        children: [\"#\", coin.market_cap_rank]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        fill: \"white\",\n        fontSize: \"30\",\n        fontFamily: \"Marker Felt\",\n        x: \"2\",\n        y: \"35\",\n        children: [\"#\", coin.market_cap_rank]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        fill: \"white\",\n        opacity: \"0.7\",\n        fontSize: \"50\",\n        fontFamily: \"Marker Felt\",\n        x: \"150\",\n        y: \"60\",\n        children: coin.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        fill: \"#black\",\n        fontSize: \"25\",\n        fontFamily: \"Sans-serif\",\n        fontWeight: \"500\",\n        x: \"365\",\n        y: \"90\",\n        children: currencyFormat(coin.current_price)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        fill: coin.price_change_percentage_24h > 0 ? \"green\" : \"red\",\n        fontSize: \"25\",\n        fontFamily: \"Sans-serif\",\n        fontWeight: \"500\",\n        x: \"365\",\n        y: \"130\",\n        children: percentageFormat(coin.price_change_percentage_24h)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        fill: \"#black\",\n        fontSize: \"16\",\n        fontFamily: \"Sans-serif\",\n        fontWeight: \"500\",\n        x: \"150\",\n        y: \"100\",\n        children: [\"Market Cap: \", marketCapFormat(coin.market_cap)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        fill: \"#black\",\n        fontSize: \"16\",\n        fontFamily: \"Sans-serif\",\n        fontWeight: \"500\",\n        x: \"150\",\n        y: \"130\",\n        children: [\"Data as of \", formatLastUpdated(coin.last_updated), \" minute\", formatLastUpdated(coin.last_updated) !== 1 ? 's' : '', \" ago\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_c = CryptoCoin;\nexport default CryptoCoin;\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptoCoin\");","map":{"version":3,"sources":["/Users/joeysembler/Development/code/crypto-prices/src/components/CryptoCoin.js"],"names":["React","CryptoCoin","coin","currencyFormat","num","percentageFormat","marketCapFormat","newNum","toFixed","formatLastUpdated","date","lastUpdatedMill","Date","parse","now","lastUpdatedMin","Math","round","console","log","current_price","image","market_cap_rank","name","price_change_percentage_24h","market_cap","last_updated"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nfunction CryptoCoin({coin}){\n\n    function currencyFormat(num) {\n        if(num < .1){\n            return '$' + num;\n        }\n        else{\n            return '$' + num;\n        }\n    }\n\n    function percentageFormat(num){\n        if(num > 0){\n            return '+' + num + '%';\n        }\n        else{\n            return num + '%';\n        }\n    }\n\n    function marketCapFormat(num){\n        if(num > 1000000000000){\n            const newNum = num /1000000000000;\n            return ('$' + newNum.toFixed(1) + \"  trillion\");\n        }\n        else if(num > 1000000000){\n            const newNum = num / 1000000000\n            return ('$' + newNum.toFixed(1) + \"  billion\");\n        }\n        else if(num > 1000000){\n            const newNum = num / 1000000;\n            return ('$' + newNum.toFixed(1) + \"  million\");\n        }\n    }\n\n    function formatLastUpdated(date){\n        let lastUpdatedMill = Date.parse(date);\n        let now = new Date;\n        now = Date.parse(now);\n\n        lastUpdatedMill = now - lastUpdatedMill;\n\n        const lastUpdatedMin = lastUpdatedMill / 1000 / 60;\n        return Math.round(lastUpdatedMin);\n    }\n\n    console.log(coin.current_price.toFixed(1))\n        \n    return (\n        <div className=\"CryptoCoin\">\n            <svg height=\"150\" width=\"500\">\n            \n                <rect width=\"1080\" height=\"1080\" fill=\"#55ceff\" />\n                <image href={coin.image} width=\"100\" height=\"100\" x=\"28\" y=\"15\"/>\n                {/* <circle fill=\"#FEE585\" cx=\"30\" cy=\"30\" r=\"30\"/> */}\n                <text fill=\"black\" fontSize=\"30\" fontFamily=\"Marker Felt\" x=\"4\" y=\"37\">#{coin.market_cap_rank}</text>\n                <text fill=\"white\" fontSize=\"30\" fontFamily=\"Marker Felt\" x=\"2\" y=\"35\">#{coin.market_cap_rank}</text>\n                \n                <text fill=\"white\" opacity=\"0.7\" fontSize=\"50\" fontFamily=\"Marker Felt\" x=\"150\" y=\"60\">{coin.name}</text>\n                <text fill=\"#black\"  fontSize=\"25\" fontFamily=\"Sans-serif\" fontWeight=\"500\" x=\"365\" y=\"90\">{currencyFormat(coin.current_price)}</text>\n                <text fill={coin.price_change_percentage_24h > 0 ? \"green\" : \"red\"}  fontSize=\"25\" fontFamily=\"Sans-serif\" fontWeight=\"500\" x=\"365\" y=\"130\">{percentageFormat(coin.price_change_percentage_24h)}</text>\n                <text fill=\"#black\"  fontSize=\"16\" fontFamily=\"Sans-serif\" fontWeight=\"500\" x=\"150\" y=\"100\">Market Cap: {marketCapFormat(coin.market_cap)}</text>\n\n                <text fill=\"#black\"  fontSize=\"16\" fontFamily=\"Sans-serif\" fontWeight=\"500\" x=\"150\" y=\"130\">Data as of {formatLastUpdated(coin.last_updated)} minute{formatLastUpdated(coin.last_updated) !== 1 ? 's' : ''} ago</text>\n\n            </svg>\n            {/* <button>Watch</button> */}\n        </div>\n    )\n}\n\nexport default CryptoCoin;"]},"metadata":{},"sourceType":"module"}