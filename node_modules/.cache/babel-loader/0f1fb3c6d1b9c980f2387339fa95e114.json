{"ast":null,"code":"var _jsxFileName = \"/Users/sarahnosal/Development/code/phase-2/Project/crypto-prices/src/components/CryptoContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Route } from 'react-router-dom';\nimport Search from \"./Search\";\nimport CryptoList from \"./CryptoList\";\nimport Sort from \"./Sort\";\nimport CoinPage from './CoinPage';\nimport WatchList from './WatchList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CryptoContainer() {\n  _s();\n\n  const [coins, setCoins] = useState([]);\n  const [displayCoins, setDisplayCoins] = useState([]);\n  const [currency, setCurrency] = useState(\"usd\");\n  const [perPage, setPerPage] = useState(\"25\");\n  useEffect(() => {\n    console.log('I was called');\n    fetch(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=${currency}&order=market_cap_desc&per_page=${perPage}&page=1&sparkline=falsekets`).then(r => r.json()).then(data => {\n      setCoins(data);\n      setDisplayCoins(data);\n    });\n  }, [currency, perPage]);\n\n  function onSearch(results) {\n    setDisplayCoins(results);\n  }\n\n  function onCurrencyChange(currency) {\n    setCurrency(currency);\n  }\n\n  function onPerPageChange(perPage) {\n    setPerPage(perPage);\n  }\n\n  function handleClick(event) {\n    const obj = {\n      id: event.target.id\n    };\n    fetch(\"http://localhost:3000/watchList\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(obj)\n    }).then(r => r.json()).then(data => {\n      console.log(data);\n    });\n  } // if(coins.length === 0){\n  //   return (\n  //     <div className=\"loading\">\n  //       <h2>\n  //         Loading... \n  //       </h2>\n  //     </div>\n  //   )\n  // }\n  // else{\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CryptoContainer\",\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/:id\",\n      children: /*#__PURE__*/_jsxDEV(CoinPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/watchlist\",\n      children: /*#__PURE__*/_jsxDEV(WatchList, {\n        currency: currency\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      children: [/*#__PURE__*/_jsxDEV(Search, {\n        coins: coins,\n        onSearch: onSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Sort, {\n        coins: displayCoins.length > 0 ? displayCoins : coins,\n        setDisplayCoins: onSearch,\n        onCurrencyChange: onCurrencyChange,\n        onPerPageChange: onPerPageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CryptoList, {\n        coins: displayCoins.length > 0 ? displayCoins : coins,\n        currency: currency,\n        handleClick: handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 7\n  }, this); // }\n}\n\n_s(CryptoContainer, \"XJt8rZPsVyHofkEv7cKZtDAtL8I=\");\n\n_c = CryptoContainer;\nexport default CryptoContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptoContainer\");","map":{"version":3,"sources":["/Users/sarahnosal/Development/code/phase-2/Project/crypto-prices/src/components/CryptoContainer.js"],"names":["React","useState","useEffect","Route","Search","CryptoList","Sort","CoinPage","WatchList","CryptoContainer","coins","setCoins","displayCoins","setDisplayCoins","currency","setCurrency","perPage","setPerPage","console","log","fetch","then","r","json","data","onSearch","results","onCurrencyChange","onPerPageChange","handleClick","event","obj","id","target","method","headers","body","JSON","stringify","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,SAASC,eAAT,GAA2B;AAAA;;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,IAAD,CAAtC;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAC,IAAAA,KAAK,CAAE,8DAA6DN,QAAS,mCAAkCE,OAAQ,6BAAlH,CAAL,CACGK,IADH,CACQC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADb,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZb,MAAAA,QAAQ,CAACa,IAAD,CAAR;AACAX,MAAAA,eAAe,CAACW,IAAD,CAAf;AACD,KALH;AAMD,GARQ,EAQN,CAACV,QAAD,EAAWE,OAAX,CARM,CAAT;;AAUA,WAASS,QAAT,CAAkBC,OAAlB,EAA0B;AACxBb,IAAAA,eAAe,CAACa,OAAD,CAAf;AACD;;AAED,WAASC,gBAAT,CAA0Bb,QAA1B,EAAmC;AACjCC,IAAAA,WAAW,CAACD,QAAD,CAAX;AACD;;AAED,WAASc,eAAT,CAAyBZ,OAAzB,EAAiC;AAC/BC,IAAAA,UAAU,CAACD,OAAD,CAAV;AACD;;AAED,WAASa,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,UAAMC,GAAG,GAAG;AACVC,MAAAA,EAAE,EAAEF,KAAK,CAACG,MAAN,CAAaD;AADP,KAAZ;AAIAZ,IAAAA,KAAK,CAAC,iCAAD,EAAoC;AACvCc,MAAAA,MAAM,EAAE,MAD+B;AAEvCC,MAAAA,OAAO,EAAE;AACP,wBAAiB;AADV,OAF8B;AAKvCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,GAAf;AALiC,KAApC,CAAL,CAOCV,IAPD,CAOMC,CAAC,IAAEA,CAAC,CAACC,IAAF,EAPT,EAQCF,IARD,CAQOG,IAAD,IAAS;AAACN,MAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ;AAAkB,KARlC;AASD,GA3CwB,CA6CzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACE,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BAGE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF,eAOE,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,YAAlB;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAEV;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF,eAWE,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAEJ,KAAf;AAAsB,QAAA,QAAQ,EAAEe;AAAhC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAEb,YAAY,CAAC2B,MAAb,GAAsB,CAAtB,GAA0B3B,YAA1B,GAAyCF,KAAtD;AAA6D,QAAA,eAAe,EAAEe,QAA9E;AAAwF,QAAA,gBAAgB,EAAEE,gBAA1G;AAA4H,QAAA,eAAe,EAAEC;AAA7I;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,UAAD;AAAY,QAAA,KAAK,EAAEhB,YAAY,CAAC2B,MAAb,GAAsB,CAAtB,GAA0B3B,YAA1B,GAAyCF,KAA5D;AAAmE,QAAA,QAAQ,EAAEI,QAA7E;AAAuF,QAAA,WAAW,EAAEe;AAApG;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAvDuB,CA2EzB;AAED;;GA7EQpB,e;;KAAAA,e;AA+ET,eAAeA,eAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { Route } from 'react-router-dom'\nimport Search from \"./Search\";\nimport CryptoList from \"./CryptoList\";\nimport Sort from \"./Sort\";\nimport CoinPage from './CoinPage'\nimport WatchList from './WatchList'\n\nfunction CryptoContainer (){\n  const [coins, setCoins] = useState([]);\n  const [displayCoins, setDisplayCoins] = useState([]);\n  const [currency, setCurrency] = useState(\"usd\");\n  const [perPage, setPerPage] = useState(\"25\");\n\n    \n  useEffect(() => {\n    console.log('I was called')\n    fetch(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=${currency}&order=market_cap_desc&per_page=${perPage}&page=1&sparkline=falsekets`)\n      .then(r => r.json())\n      .then(data => {\n        setCoins(data);\n        setDisplayCoins(data);\n      })\n  }, [currency, perPage])\n\n  function onSearch(results){\n    setDisplayCoins(results);\n  }\n\n  function onCurrencyChange(currency){\n    setCurrency(currency);\n  }\n\n  function onPerPageChange(perPage){\n    setPerPage(perPage);\n  }\n  \n  function handleClick(event) {\n    const obj = {\n      id: event.target.id\n    };\n    \n    fetch(\"http://localhost:3000/watchList\", {\n      method: 'POST',\n      headers: {\n        'Content-Type' : 'application/json',\n      },\n      body: JSON.stringify(obj),\n    })\n    .then(r=>r.json())\n    .then((data)=> {console.log(data)})\n  }\n\n  // if(coins.length === 0){\n  //   return (\n  //     <div className=\"loading\">\n  //       <h2>\n  //         Loading... \n  //       </h2>\n  //     </div>\n  //   )\n  // }\n  // else{\n    return (\n      <div className=\"CryptoContainer\">\n\n\n        <Route path=\"/:id\">\n          <CoinPage />\n        </Route>\n\n        <Route exact path='/watchlist'>\n          <WatchList currency={currency} />\n        </Route>\n        \n        <Route exact path=\"/\">\n          <Search coins={coins} onSearch={onSearch} />\n          <Sort coins={displayCoins.length > 0 ? displayCoins : coins} setDisplayCoins={onSearch} onCurrencyChange={onCurrencyChange} onPerPageChange={onPerPageChange}/>\n          <CryptoList coins={displayCoins.length > 0 ? displayCoins : coins} currency={currency} handleClick={handleClick}/>\n        </Route>\n        \n      </div>\n    );\n  // }\n \n}\n\nexport default CryptoContainer;"]},"metadata":{},"sourceType":"module"}