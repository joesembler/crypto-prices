{"ast":null,"code":"var _jsxFileName = \"/Users/sarahnosal/Development/code/phase-2/Project/crypto-prices/src/components/WatchList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport CryptoList from './CryptoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WatchList(props) {\n  _s();\n\n  const [watchedCoins, setWatchedCoins] = useState([]);\n  const [updatedWatchList, setUpdatedWatchList] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:3000/watchList\").then(r => r.json()).then(data => {\n      setWatchedCoins(data.map(coin => coin));\n    });\n  }, [props.onChange]);\n  useEffect(() => {\n    fetch(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=${props.currency}&order=market_cap_desc&per_page=250&page=1&sparkline=falsekets`).then(r => r.json()).then(data => {\n      setUpdatedWatchList(data.map(coin => {\n        watchedCoins.forEach(watchedCoin => {\n          if (coin.id === watchedCoin.id) {\n            return coin;\n          }\n        });\n      }));\n    });\n  }, [watchedCoins]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"WatchList\",\n    children: /*#__PURE__*/_jsxDEV(CryptoList, {\n      coins: updatedWatchList,\n      currency: props.currency\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WatchList, \"g5PgEUG+lEL5FZCa4XbUtLdDtrw=\");\n\n_c = WatchList;\nexport default WatchList;\n\nvar _c;\n\n$RefreshReg$(_c, \"WatchList\");","map":{"version":3,"sources":["/Users/sarahnosal/Development/code/phase-2/Project/crypto-prices/src/components/WatchList.js"],"names":["React","useState","useEffect","CryptoList","WatchList","props","watchedCoins","setWatchedCoins","updatedWatchList","setUpdatedWatchList","fetch","then","r","json","data","map","coin","onChange","currency","forEach","watchedCoin","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AAEtB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACO,gBAAD,EAAmBC,mBAAnB,IAA0CR,QAAQ,CAAC,EAAD,CAAxD;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACVQ,IAAAA,KAAK,CAAC,iCAAD,CAAL,CACCC,IADD,CACMC,CAAC,IAAEA,CAAC,CAACC,IAAF,EADT,EAECF,IAFD,CAEMG,IAAI,IAAG;AACTP,MAAAA,eAAe,CAACO,IAAI,CAACC,GAAL,CAASC,IAAI,IAAIA,IAAjB,CAAD,CAAf;AACH,KAJD;AAKH,GANQ,EAMN,CAACX,KAAK,CAACY,QAAP,CANM,CAAT;AAQAf,EAAAA,SAAS,CAAC,MAAI;AACVQ,IAAAA,KAAK,CAAE,8DAA6DL,KAAK,CAACa,QAAS,gEAA9E,CAAL,CACKP,IADL,CACUC,CAAC,IAAEA,CAAC,CAACC,IAAF,EADb,EAEKF,IAFL,CAEUG,IAAI,IAAG;AACTL,MAAAA,mBAAmB,CAACK,IAAI,CAACC,GAAL,CAASC,IAAI,IAAE;AAC/BV,QAAAA,YAAY,CAACa,OAAb,CAAsBC,WAAD,IAAiB;AAClC,cAAGJ,IAAI,CAACK,EAAL,KAAYD,WAAW,CAACC,EAA3B,EAA8B;AAC1B,mBAAOL,IAAP;AACH;AACJ,SAJD;AAKH,OANmB,CAAD,CAAnB;AAOH,KAVL;AAWH,GAZQ,EAYN,CAACV,YAAD,CAZM,CAAT;AAcA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACI,QAAC,UAAD;AAAY,MAAA,KAAK,EAAEE,gBAAnB;AAAqC,MAAA,QAAQ,EAAEH,KAAK,CAACa;AAArD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAnCQd,S;;KAAAA,S;AAqCT,eAAeA,SAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport CryptoList from './CryptoList';\n\nfunction WatchList(props) {\n\n    const [watchedCoins, setWatchedCoins] = useState([]);\n    const [updatedWatchList, setUpdatedWatchList] = useState([]);\n\n    useEffect(()=>{\n        fetch(\"http://localhost:3000/watchList\")\n        .then(r=>r.json())\n        .then(data=> {\n            setWatchedCoins(data.map(coin => coin))\n        })\n    }, [props.onChange])\n\n    useEffect(()=>{\n        fetch(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=${props.currency}&order=market_cap_desc&per_page=250&page=1&sparkline=falsekets`)\n            .then(r=>r.json())\n            .then(data=> {\n                setUpdatedWatchList(data.map(coin=>{\n                    watchedCoins.forEach((watchedCoin) => {\n                        if(coin.id === watchedCoin.id){\n                            return coin;\n                        }\n                    })\n                })) \n            })\n    }, [watchedCoins])\n\n    return(\n        <div className=\"WatchList\">\n            <CryptoList coins={updatedWatchList} currency={props.currency}></CryptoList>\n        </div>\n    )\n    \n    \n    \n}\n\nexport default WatchList;"]},"metadata":{},"sourceType":"module"}