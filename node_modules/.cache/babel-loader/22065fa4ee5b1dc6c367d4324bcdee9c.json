{"ast":null,"code":"var _jsxFileName = \"/Users/sarahnosal/Development/code/phase-2/Project/crypto-prices/src/components/WatchList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport CryptoList from './CryptoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WatchList(props) {\n  _s();\n\n  const [watchedCoins, setWatchedCoins] = useState({});\n  const [updatedWatchList, setUpdatedWatchList] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:3000/watchList\").then(r => r.json()).then(data => {\n      console.log(data); //console.log here to see what data looks like\n      // check out key/value pairs of the object and find what you want to access\n      // ;)\n      //good luck\n\n      setWatchedCoins({\n        \"data\": data\n      });\n      console.log(watchedCoins);\n    });\n\n    if (watchedCoins.data.length > 0) {\n      fetch(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=${props.currency}&order=market_cap_desc&per_page=250&page=1&sparkline=falsekets`).then(r => r.json()).then(data => {\n        setUpdatedWatchList(data.map(coin => {\n          watchedCoins.data.forEach(watchedCoin => {\n            if (coin.id === watchedCoin.id) {\n              return coin;\n            }\n          });\n        }));\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"WatchList\",\n    children: updatedWatchList.length > 0 ? /*#__PURE__*/_jsxDEV(CryptoList, {\n      coins: updatedWatchList,\n      currency: props.currency\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 44\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WatchList, \"zRHdrdUK8T8gXCo1vWXO94Rq6ZM=\");\n\n_c = WatchList;\nexport default WatchList;\n\nvar _c;\n\n$RefreshReg$(_c, \"WatchList\");","map":{"version":3,"sources":["/Users/sarahnosal/Development/code/phase-2/Project/crypto-prices/src/components/WatchList.js"],"names":["React","useState","useEffect","CryptoList","WatchList","props","watchedCoins","setWatchedCoins","updatedWatchList","setUpdatedWatchList","fetch","then","r","json","data","console","log","length","currency","map","coin","forEach","watchedCoin","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AAEtB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACO,gBAAD,EAAmBC,mBAAnB,IAA0CR,QAAQ,CAAC,EAAD,CAAxD;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACVQ,IAAAA,KAAK,CAAC,iCAAD,CAAL,CACCC,IADD,CACMC,CAAC,IAAEA,CAAC,CAACC,IAAF,EADT,EAECF,IAFD,CAEMG,IAAI,IAAG;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EADS,CAET;AACA;AACA;AACA;;AACDP,MAAAA,eAAe,CAAC;AAAC,gBAAQO;AAAT,OAAD,CAAf;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYV,YAAZ;AACF,KAVD;;AAYA,QAAGA,YAAY,CAACQ,IAAb,CAAkBG,MAAlB,GAA2B,CAA9B,EAAgC;AAC5BP,MAAAA,KAAK,CAAE,8DAA6DL,KAAK,CAACa,QAAS,gEAA9E,CAAL,CACCP,IADD,CACMC,CAAC,IAAEA,CAAC,CAACC,IAAF,EADT,EAECF,IAFD,CAEMG,IAAI,IAAG;AACTL,QAAAA,mBAAmB,CAACK,IAAI,CAACK,GAAL,CAASC,IAAI,IAAE;AAC/Bd,UAAAA,YAAY,CAACQ,IAAb,CAAkBO,OAAlB,CAA2BC,WAAD,IAAiB;AACvC,gBAAGF,IAAI,CAACG,EAAL,KAAYD,WAAW,CAACC,EAA3B,EAA8B;AAC1B,qBAAOH,IAAP;AACH;AACJ,WAJD;AAKH,SANmB,CAAD,CAAnB;AAOH,OAVD;AAWH;AAEJ,GA3BQ,EA2BN,EA3BM,CAAT;AA+BA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACKZ,gBAAgB,CAACS,MAAjB,GAA0B,CAA1B,gBAA8B,QAAC,UAAD;AAAY,MAAA,KAAK,EAAET,gBAAnB;AAAqC,MAAA,QAAQ,EAAEH,KAAK,CAACa;AAArD;AAAA;AAAA;AAAA;AAAA,YAA9B,GAAkG;AADvG;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAzCQd,S;;KAAAA,S;AA2CT,eAAeA,SAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport CryptoList from './CryptoList';\n\nfunction WatchList(props) {\n\n    const [watchedCoins, setWatchedCoins] = useState({});\n    const [updatedWatchList, setUpdatedWatchList] = useState([]);\n\n    useEffect(()=>{\n        fetch(\"http://localhost:3000/watchList\")\n        .then(r=>r.json())\n        .then(data=> {\n            console.log(data)\n            //console.log here to see what data looks like\n            // check out key/value pairs of the object and find what you want to access\n            // ;)\n            //good luck\n           setWatchedCoins({\"data\": data})\n           console.log(watchedCoins)\n        })\n\n        if(watchedCoins.data.length > 0){\n            fetch(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=${props.currency}&order=market_cap_desc&per_page=250&page=1&sparkline=falsekets`)\n            .then(r=>r.json())\n            .then(data=> {\n                setUpdatedWatchList(data.map(coin=>{\n                    watchedCoins.data.forEach((watchedCoin) => { \n                        if(coin.id === watchedCoin.id){\n                            return coin;\n                        }\n                    })\n                })) \n            })\n        }\n        \n    }, [])\n\n    \n\n    return(\n        <div className=\"WatchList\">\n            {updatedWatchList.length > 0 ? <CryptoList coins={updatedWatchList} currency={props.currency} /> : null}\n        </div>\n    )\n}\n\nexport default WatchList;"]},"metadata":{},"sourceType":"module"}