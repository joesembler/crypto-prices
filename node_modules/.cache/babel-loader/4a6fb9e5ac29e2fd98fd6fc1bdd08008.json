{"ast":null,"code":"var _jsxFileName = \"/Users/sarahnosal/Development/code/phase-2/Project/crypto-prices/src/components/WatchList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport CryptoList from './CryptoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet i = 0;\n\nfunction WatchList(props) {\n  _s();\n\n  const [watchedCoins, setWatchedCoins] = useState({});\n  const [updatedWatchList, setUpdatedWatchList] = useState([]);\n  let x;\n  fetch(\"http://localhost:3000/watchList\").then(r => r.json()).then(data => {\n    console.log(data); //console.log here to see what data looks like\n    // check out key/value pairs of the object and find what you want to access\n    // ;)\n    //good luck\n\n    x = {\n      \"data\": data\n    };\n    console.log(x, i);\n    i++;\n  });\n  setWatchedCoins(x);\n  useEffect(() => {\n    console.log(watchedCoins);\n    fetch(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=${props.currency}&order=market_cap_desc&per_page=250&page=1&sparkline=falsekets`).then(r => r.json()).then(data => {\n      setUpdatedWatchList(data.map(coin => {\n        watchedCoins.data.forEach(watchedCoin => {\n          if (coin.id === watchedCoin.id) {\n            return coin;\n          }\n        });\n      }));\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"WatchList\",\n    children: updatedWatchList.length > 0 ? /*#__PURE__*/_jsxDEV(CryptoList, {\n      coins: updatedWatchList,\n      currency: props.currency\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 44\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WatchList, \"zRHdrdUK8T8gXCo1vWXO94Rq6ZM=\");\n\n_c = WatchList;\nexport default WatchList;\n\nvar _c;\n\n$RefreshReg$(_c, \"WatchList\");","map":{"version":3,"sources":["/Users/sarahnosal/Development/code/phase-2/Project/crypto-prices/src/components/WatchList.js"],"names":["React","useState","useEffect","CryptoList","i","WatchList","props","watchedCoins","setWatchedCoins","updatedWatchList","setUpdatedWatchList","x","fetch","then","r","json","data","console","log","currency","map","coin","forEach","watchedCoin","id","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAGA,IAAIC,CAAC,GAAC,CAAN;;AACA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AAEtB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACQ,gBAAD,EAAmBC,mBAAnB,IAA0CT,QAAQ,CAAC,EAAD,CAAxD;AAEA,MAAIU,CAAJ;AAIIC,EAAAA,KAAK,CAAC,iCAAD,CAAL,CACCC,IADD,CACMC,CAAC,IAAEA,CAAC,CAACC,IAAF,EADT,EAECF,IAFD,CAEMG,IAAI,IAAG;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EADS,CAET;AACA;AACA;AACA;;AACDL,IAAAA,CAAC,GAAG;AAAC,cAASK;AAAV,KAAJ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,CAAZ,EAAeP,CAAf;AACAA,IAAAA,CAAC;AACH,GAXD;AAYAI,EAAAA,eAAe,CAACG,CAAD,CAAf;AAGJT,EAAAA,SAAS,CAAC,MAAI;AACVe,IAAAA,OAAO,CAACC,GAAR,CAAYX,YAAZ;AACAK,IAAAA,KAAK,CAAE,8DAA6DN,KAAK,CAACa,QAAS,gEAA9E,CAAL,CACKN,IADL,CACUC,CAAC,IAAEA,CAAC,CAACC,IAAF,EADb,EAEKF,IAFL,CAEUG,IAAI,IAAG;AACTN,MAAAA,mBAAmB,CAACM,IAAI,CAACI,GAAL,CAASC,IAAI,IAAE;AAC/Bd,QAAAA,YAAY,CAACS,IAAb,CAAkBM,OAAlB,CAA2BC,WAAD,IAAiB;AACvC,cAAGF,IAAI,CAACG,EAAL,KAAYD,WAAW,CAACC,EAA3B,EAA8B;AAC1B,mBAAOH,IAAP;AACH;AACJ,SAJD;AAKH,OANmB,CAAD,CAAnB;AAOH,KAVL;AAWH,GAbQ,EAaN,EAbM,CAAT;AAeA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACKZ,gBAAgB,CAACgB,MAAjB,GAA0B,CAA1B,gBAA8B,QAAC,UAAD;AAAY,MAAA,KAAK,EAAEhB,gBAAnB;AAAqC,MAAA,QAAQ,EAAEH,KAAK,CAACa;AAArD;AAAA;AAAA;AAAA;AAAA,YAA9B,GAAkG;AADvG;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA5CQd,S;;KAAAA,S;AA8CT,eAAeA,SAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport CryptoList from './CryptoList';\n\n\nlet i=0;\nfunction WatchList(props) {\n\n    const [watchedCoins, setWatchedCoins] = useState({});\n    const [updatedWatchList, setUpdatedWatchList] = useState([]);\n    \n    let x;\n    \n    \n        \n        fetch(\"http://localhost:3000/watchList\")\n        .then(r=>r.json())\n        .then(data=> {\n            console.log(data)\n            //console.log here to see what data looks like\n            // check out key/value pairs of the object and find what you want to access\n            // ;)\n            //good luck\n           x = {\"data\" : data};\n           console.log(x, i)\n           i++;\n        })\n        setWatchedCoins(x)\n    \n\n    useEffect(()=>{\n        console.log(watchedCoins)\n        fetch(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=${props.currency}&order=market_cap_desc&per_page=250&page=1&sparkline=falsekets`)\n            .then(r=>r.json())\n            .then(data=> {\n                setUpdatedWatchList(data.map(coin=>{\n                    watchedCoins.data.forEach((watchedCoin) => { \n                        if(coin.id === watchedCoin.id){\n                            return coin;\n                        }\n                    })\n                })) \n            })\n    }, [])\n\n    return(\n        <div className=\"WatchList\">\n            {updatedWatchList.length > 0 ? <CryptoList coins={updatedWatchList} currency={props.currency} /> : null}\n        </div>\n    )\n}\n\nexport default WatchList;"]},"metadata":{},"sourceType":"module"}