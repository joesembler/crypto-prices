{"ast":null,"code":"var _jsxFileName = \"/Users/sarahnosal/Development/code/phase-2/Project/crypto-prices/src/components/CryptoContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Route } from 'react-router-dom';\nimport Search from \"./Search\";\nimport CryptoList from \"./CryptoList\";\nimport Sort from \"./Sort\";\nimport CoinPage from './CoinPage';\nimport WatchList from './WatchList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CryptoContainer() {\n  _s();\n\n  const [coins, setCoins] = useState([]);\n  const [displayCoins, setDisplayCoins] = useState([]);\n  const [currency, setCurrency] = useState(\"usd\");\n  const [perPage, setPerPage] = useState(\"25\");\n  useEffect(() => {\n    console.log('I was called');\n    fetch(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=${currency}&order=market_cap_desc&per_page=${perPage}&page=1&sparkline=falsekets`).then(r => r.json()).then(data => {\n      setCoins(data);\n      setDisplayCoins(data);\n    });\n  }, [currency, perPage]);\n\n  function onSearch(results) {\n    setDisplayCoins(results);\n  }\n\n  function onCurrencyChange(currency) {\n    setCurrency(currency);\n  }\n\n  function onPerPageChange(perPage) {\n    setPerPage(perPage);\n  }\n\n  function handleClick(event) {\n    const id = event.target.id;\n  }\n\n  if (coins.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CryptoContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/:id\",\n        children: /*#__PURE__*/_jsxDEV(CoinPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/watchlist\",\n        children: /*#__PURE__*/_jsxDEV(WatchList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: [/*#__PURE__*/_jsxDEV(Search, {\n          coins: coins,\n          onSearch: onSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Sort, {\n          coins: displayCoins.length > 0 ? displayCoins : coins,\n          setDisplayCoins: onSearch,\n          onCurrencyChange: onCurrencyChange,\n          onPerPageChange: onPerPageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CryptoList, {\n          coins: displayCoins.length > 0 ? displayCoins : coins,\n          currency: currency\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(CryptoContainer, \"XJt8rZPsVyHofkEv7cKZtDAtL8I=\");\n\n_c = CryptoContainer;\nexport default CryptoContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptoContainer\");","map":{"version":3,"sources":["/Users/sarahnosal/Development/code/phase-2/Project/crypto-prices/src/components/CryptoContainer.js"],"names":["React","useState","useEffect","Route","Search","CryptoList","Sort","CoinPage","WatchList","CryptoContainer","coins","setCoins","displayCoins","setDisplayCoins","currency","setCurrency","perPage","setPerPage","console","log","fetch","then","r","json","data","onSearch","results","onCurrencyChange","onPerPageChange","handleClick","event","id","target","length"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { Route } from 'react-router-dom'\nimport Search from \"./Search\";\nimport CryptoList from \"./CryptoList\";\nimport Sort from \"./Sort\";\nimport CoinPage from './CoinPage'\nimport WatchList from './WatchList'\n\nfunction CryptoContainer (){\n  const [coins, setCoins] = useState([]);\n  const [displayCoins, setDisplayCoins] = useState([]);\n  const [currency, setCurrency] = useState(\"usd\");\n  const [perPage, setPerPage] = useState(\"25\");\n    \n  useEffect(() => {\n    console.log('I was called')\n    fetch(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=${currency}&order=market_cap_desc&per_page=${perPage}&page=1&sparkline=falsekets`)\n      .then(r => r.json())\n      .then(data => {\n        setCoins(data);\n        setDisplayCoins(data);\n      })\n  }, [currency, perPage])\n\n  function onSearch(results){\n    setDisplayCoins(results);\n  }\n\n  function onCurrencyChange(currency){\n    setCurrency(currency);\n  }\n\n  function onPerPageChange(perPage){\n    setPerPage(perPage);\n  }\n  \n  function handleClick(event) {\n    const id = event.target.id\n  }\n\n  if(coins.length === 0){\n    return (\n      <div className=\"loading\">\n        <h2>\n          Loading... \n        </h2>\n      </div>\n    )\n  }\n  else{\n    return (\n      <div className=\"CryptoContainer\">\n\n\n        <Route path=\"/:id\">\n          <CoinPage />\n        </Route>\n\n        <Route path='/watchlist'>\n          <WatchList />\n        </Route>\n        \n        <Route exact path=\"/\">\n          <Search coins={coins} onSearch={onSearch} />\n          <Sort coins={displayCoins.length > 0 ? displayCoins : coins} setDisplayCoins={onSearch} onCurrencyChange={onCurrencyChange} onPerPageChange={onPerPageChange}/>\n          <CryptoList coins={displayCoins.length > 0 ? displayCoins : coins} currency={currency}/>\n        </Route>\n        \n      </div>\n    );\n  }\n \n}\n\nexport default CryptoContainer;"]},"metadata":{},"sourceType":"module"}