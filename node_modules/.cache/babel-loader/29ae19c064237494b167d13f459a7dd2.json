{"ast":null,"code":"var _jsxFileName = \"/Users/sarahnosal/Development/code/phase-2/Project/crypto-prices/src/components/WatchList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport CryptoList from './CryptoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WatchList(props) {\n  _s();\n\n  // const [watchedCoins, setWatchedCoins] = useState([]);\n  const [updatedWatchList, setUpdatedWatchList] = useState([]);\n  let watchedCoins;\n  useEffect(() => {\n    fetch(\"http://localhost:3000/watchList\").then(r => r.json()).then(data => {\n      watchedCoins = data;\n    });\n  }, []);\n  useEffect(() => {\n    fetch(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=${props.currency}&order=market_cap_desc&per_page=250&page=1&sparkline=falsekets`).then(r => r.json()).then(data => {\n      setUpdatedWatchList(data.map(coin => {\n        conmouseleave.log(watchedCoins);\n        watchedCoins.forEach(watchedCoin => {\n          if (coin.id === watchedCoin.id) {\n            return coin;\n          }\n        });\n      }));\n    });\n  }, [watchedCoins]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"WatchList\",\n    children: updatedWatchList.length > 0 ? /*#__PURE__*/_jsxDEV(CryptoList, {\n      coins: updatedWatchList,\n      currency: props.currency\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 44\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WatchList, \"WtxWKbWB4DYRkc0pUVOpCyTOdHo=\");\n\n_c = WatchList;\nexport default WatchList;\n\nvar _c;\n\n$RefreshReg$(_c, \"WatchList\");","map":{"version":3,"sources":["/Users/sarahnosal/Development/code/phase-2/Project/crypto-prices/src/components/WatchList.js"],"names":["React","useState","useEffect","CryptoList","WatchList","props","updatedWatchList","setUpdatedWatchList","watchedCoins","fetch","then","r","json","data","currency","map","coin","conmouseleave","log","forEach","watchedCoin","id","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AAEtB;AACA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CN,QAAQ,CAAC,EAAD,CAAxD;AAEA,MAAIO,YAAJ;AAEAN,EAAAA,SAAS,CAAC,MAAI;AACVO,IAAAA,KAAK,CAAC,iCAAD,CAAL,CACCC,IADD,CACMC,CAAC,IAAEA,CAAC,CAACC,IAAF,EADT,EAECF,IAFD,CAEMG,IAAI,IAAG;AACTL,MAAAA,YAAY,GAAGK,IAAf;AACH,KAJD;AAKH,GANQ,EAMN,EANM,CAAT;AAQAX,EAAAA,SAAS,CAAC,MAAI;AACVO,IAAAA,KAAK,CAAE,8DAA6DJ,KAAK,CAACS,QAAS,gEAA9E,CAAL,CACKJ,IADL,CACUC,CAAC,IAAEA,CAAC,CAACC,IAAF,EADb,EAEKF,IAFL,CAEUG,IAAI,IAAG;AACTN,MAAAA,mBAAmB,CAACM,IAAI,CAACE,GAAL,CAASC,IAAI,IAAE;AAC/BC,QAAAA,aAAa,CAACC,GAAd,CAAkBV,YAAlB;AACAA,QAAAA,YAAY,CAACW,OAAb,CAAsBC,WAAD,IAAiB;AAClC,cAAGJ,IAAI,CAACK,EAAL,KAAYD,WAAW,CAACC,EAA3B,EAA8B;AAC1B,mBAAOL,IAAP;AACH;AACJ,SAJD;AAKH,OAPmB,CAAD,CAAnB;AAQH,KAXL;AAYH,GAbQ,EAaN,CAACR,YAAD,CAbM,CAAT;AAeA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACKF,gBAAgB,CAACgB,MAAjB,GAA0B,CAA1B,gBAA8B,QAAC,UAAD;AAAY,MAAA,KAAK,EAAEhB,gBAAnB;AAAqC,MAAA,QAAQ,EAAED,KAAK,CAACS;AAArD;AAAA;AAAA;AAAA;AAAA,YAA9B,GAAkG;AADvG;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAvCQV,S;;KAAAA,S;AAyCT,eAAeA,SAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport CryptoList from './CryptoList';\n\nfunction WatchList(props) {\n\n    // const [watchedCoins, setWatchedCoins] = useState([]);\n    const [updatedWatchList, setUpdatedWatchList] = useState([]);\n\n    let watchedCoins;\n\n    useEffect(()=>{\n        fetch(\"http://localhost:3000/watchList\")\n        .then(r=>r.json())\n        .then(data=> {\n            watchedCoins = data;\n        })\n    }, [])\n\n    useEffect(()=>{\n        fetch(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=${props.currency}&order=market_cap_desc&per_page=250&page=1&sparkline=falsekets`)\n            .then(r=>r.json())\n            .then(data=> {\n                setUpdatedWatchList(data.map(coin=>{\n                    conmouseleave.log(watchedCoins)\n                    watchedCoins.forEach((watchedCoin) => { \n                        if(coin.id === watchedCoin.id){\n                            return coin;\n                        }\n                    })\n                })) \n            })\n    }, [watchedCoins])\n\n    return(\n        <div className=\"WatchList\">\n            {updatedWatchList.length > 0 ? <CryptoList coins={updatedWatchList} currency={props.currency} /> : null}\n            \n        </div>\n    )\n    \n    \n    \n}\n\nexport default WatchList;"]},"metadata":{},"sourceType":"module"}