{"ast":null,"code":"var _jsxFileName = \"/Users/sarahnosal/Development/code/phase-2/Project/crypto-prices/src/components/WatchList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport CryptoList from './CryptoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WatchList(props) {\n  _s();\n\n  const [updatedWatchList, setUpdatedWatchList] = useState([]); // let x;\n\n  useEffect(() => {\n    let x;\n    let y;\n    fetch(\"http://localhost:3000/watchList\").then(r => r.json()).then(data => {\n      console.log(data); //console.log here to see what data looks like\n      // check out key/value pairs of the object and find what you want to access\n      // ;\n      //good luck\n\n      x = [data];\n      console.log(x);\n    });\n    fetch(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=${props.currency}&order=market_cap_desc&per_page=250&page=1&sparkline=falsekets`).then(r => r.json()).then(data2 => {\n      y = data2;\n    });\n    x.forEach(coin);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"WatchList\",\n    children: updatedWatchList.length > 0 ? /*#__PURE__*/_jsxDEV(CryptoList, {\n      coins: updatedWatchList,\n      currency: props.currency\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 44\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(WatchList, \"mm0g2GKaOMLLE2cDSOqAXJCEqJw=\");\n\n_c = WatchList;\nexport default WatchList;\n\nvar _c;\n\n$RefreshReg$(_c, \"WatchList\");","map":{"version":3,"sources":["/Users/sarahnosal/Development/code/phase-2/Project/crypto-prices/src/components/WatchList.js"],"names":["React","useState","useEffect","CryptoList","WatchList","props","updatedWatchList","setUpdatedWatchList","x","y","fetch","then","r","json","data","console","log","currency","data2","forEach","coin","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAGA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AAEtB,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CN,QAAQ,CAAC,EAAD,CAAxD,CAFsB,CAItB;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIM,CAAJ;AACA,QAAIC,CAAJ;AACAC,IAAAA,KAAK,CAAC,iCAAD,CAAL,CACCC,IADD,CACMC,CAAC,IAAEA,CAAC,CAACC,IAAF,EADT,EAECF,IAFD,CAEMG,IAAI,IAAG;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EADS,CAET;AACA;AACA;AACA;;AACDN,MAAAA,CAAC,GAAG,CAACM,IAAD,CAAJ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYR,CAAZ;AACF,KAVD;AAWAE,IAAAA,KAAK,CAAE,8DAA6DL,KAAK,CAACY,QAAS,gEAA9E,CAAL,CACKN,IADL,CACUC,CAAC,IAAEA,CAAC,CAACC,IAAF,EADb,EAEKF,IAFL,CAEUO,KAAK,IAAG;AACVT,MAAAA,CAAC,GAAGS,KAAJ;AACH,KAJL;AAMAV,IAAAA,CAAC,CAACW,OAAF,CAAUC,IAAV;AACH,GArBQ,EAqBN,EArBM,CAAT;AAwBA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACKd,gBAAgB,CAACe,MAAjB,GAA0B,CAA1B,gBAA8B,QAAC,UAAD;AAAY,MAAA,KAAK,EAAEf,gBAAnB;AAAqC,MAAA,QAAQ,EAAED,KAAK,CAACY;AAArD;AAAA;AAAA;AAAA;AAAA,YAA9B,GAAkG;AADvG;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAnCQb,S;;KAAAA,S;AAqCT,eAAeA,SAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport CryptoList from './CryptoList';\n\n\nfunction WatchList(props) {\n\n    const [updatedWatchList, setUpdatedWatchList] = useState([]);\n    \n    // let x;\n\n    useEffect(() => {\n        let x;\n        let y;\n        fetch(\"http://localhost:3000/watchList\")\n        .then(r=>r.json())\n        .then(data=> {\n            console.log(data)\n            //console.log here to see what data looks like\n            // check out key/value pairs of the object and find what you want to access\n            // ;\n            //good luck\n           x = [data];\n           console.log(x)\n        })\n        fetch(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=${props.currency}&order=market_cap_desc&per_page=250&page=1&sparkline=falsekets`)\n            .then(r=>r.json())\n            .then(data2=> {\n                y = data2;\n            })\n\n        x.forEach(coin)\n    }, [])\n        \n\n    return(\n        <div className=\"WatchList\">\n            {updatedWatchList.length > 0 ? <CryptoList coins={updatedWatchList} currency={props.currency} /> : null}\n        </div>\n    )\n}\n\nexport default WatchList;"]},"metadata":{},"sourceType":"module"}